type Query {
  case(caseId: ID!): Case
  cases: [Case!]!
  suspect(suspectId: ID!): Suspect
  node(id: ID!): Node
}

type Case implements Node {
  id: ID!
  caseName: String!
  suspects: [Suspect!]!
}

type Suspect implements Node {
  id: ID!
  suspectName: String!
  jobTitle: String!
  shortBio: String!
  longBio: String
  imageUrl: String
  businessAssociates: [Relationship!]
  delinquentTaxes: Int!
  income: Int!
  businessName: String!
  customerComplaints: String!
}

type Relationship {
  description: String!
  with: Suspect!
}

interface Node {
  id: ID!
}
